{"version":3,"sources":["components/ToDoTasks.js","App.js","index.js"],"names":["ToDoTasks","props","today","Date","date","getFullYear","getMonth","getDate","handleDelete","task","fetch","id","method","body","JSON","stringify","state","headers","then","fetchData","show","todoList","activeItem","title","description","completed","startdate","enddate","editing","bind","handleChange","handleSubmit","getCookie","startEdit","this","setState","response","json","data","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","e","target","value","type","checked","csrftoken","window","location","reload","tasks","colors","primaryColor","secondaryColor","className","onClick","setModal","map","index","style","Modal","Header","Title","Body","onChange","placeholder","rows","Footer","Button","variant","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0846cbad.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Button,Modal} from 'react-bootstrap'\r\nimport \"./todotasks.css\"\r\n\r\nexport class ToDoTasks extends Component {    \r\n    constructor(props) {\r\n        var today = new Date(),\r\n        date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        super(props)\r\n    \r\n        this.state = {\r\n            show:false,\r\n            todoList:[],\r\n            activeItem:{\r\n                id:null,\r\n                title:'',\r\n                description:'',\r\n                completed:false,\r\n                startdate: date,\r\n                enddate:date,\r\n            },\r\n            editing:false,      \r\n        }\r\n        this.fetchData = this.fetchData.bind(this)\r\n        this.handleChange = this.handleChange.bind(this) \r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.getCookie = this.getCookie.bind(this)\r\n        this.startEdit = this.startEdit.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        \r\n    }\r\n    // modal popup create task\r\n    setModal(){\r\n        this.setState({show: !this.state.show})\r\n    };\r\n   \r\n\r\n   \r\n    //  fetch data \r\n   fetchData(){\r\n        fetch(\"https://djapitodo.herokuapp.com/tasks/\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.setState({\r\n            todoList:data \r\n        })\r\n    })\r\n    };\r\n\r\n\r\n    // mount data\r\n    componentDidMount(){\r\n        this.fetchData()\r\n    }\r\n\r\n   //cerf token cookie \r\n   getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n//  handele chaange field \r\nhandleChange(e){\r\n    var target = e.target;\r\n    var value = target.type === 'checkbox' ? target.checked : target.value;\r\n    var name = target.name;\r\n    // console.log('Name:', name)\r\n    // console.log('Value:', value)\r\n    this.setState({\r\n      activeItem:{\r\n        ...this.state.activeItem,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n//   submit data\r\n  handleSubmit(e){\r\n    var csrftoken = this.getCookie('csrftoken')\r\n    if(this.state.editing === true){\r\n    fetch(`https://djapitodo.herokuapp.com/tasks/${ this.state.activeItem.id}/`,{\r\n        method:\"PUT\",\r\n        body:JSON.stringify(this.state.activeItem),\r\n        headers:{\r\n        'content-type':'application/json',\r\n        'X-CSRFToken':csrftoken,\r\n        }\r\n    })  \r\n  \r\n    window.location.reload()\r\n}else{\r\n        fetch(\"https://djapitodo.herokuapp.com/tasks/\",{\r\n        method:\"POST\",\r\n        body:JSON.stringify(this.state.activeItem),\r\n        headers:{\r\n        'content-type':'application/json',\r\n        'X-CSRFToken':csrftoken,\r\n        }\r\n        // reset form field \r\n    }).then(()  => {\r\n        this.fetchData()\r\n        this.setState({\r\n           activeItem:{\r\n          id:null, \r\n          title:'',\r\n          completed:false,\r\n          description:'',\r\n          startdate:'',\r\n          enddate:''\r\n        }\r\n        })\r\n    })\r\n    window.location.reload()\r\n}\r\n  }\r\n   \r\n\r\n    //   edit task\r\n    startEdit(task){\r\n        this.setState({\r\n          activeItem:task,\r\n          editing:true,\r\n          show:true,\r\n        })\r\n      }\r\n    //   delete \r\n    handleDelete = (task) => {\r\n        fetch(`https://djapitodo.herokuapp.com/tasks/${task.id}/`,{\r\n           method:\"DELETE\",\r\n          body:JSON.stringify(this.state),\r\n          headers:{\r\n          'content-type':'application/json',\r\n          }\r\n          }).then(() => {\r\n          this.fetchData()\r\n      })\r\n    }\r\n    render() {\r\n        const tasks = this.state.todoList;\r\n        const {show} =this.state\r\n        \r\n        const     colors = [\r\n            {\r\n                primaryColor : \"#5D93E1\",\r\n                secondaryColor : \"#ECF3FC\"\r\n            },\r\n            {\r\n                primaryColor : \"#5DC250\",\r\n                secondaryColor : \"#F2FAF1\"\r\n            },\r\n            {\r\n                primaryColor : \"#F9D288\",\r\n                secondaryColor : \"#FEFAF1\"\r\n            },\r\n            \r\n            {\r\n                primaryColor : \"#F48687\",\r\n                secondaryColor : \"#FDF1F1\"\r\n            },\r\n            {\r\n                primaryColor : \"#B964F7\",\r\n                secondaryColor : \"#F3F0FD\"\r\n            }\r\n        ]\r\n  \r\n        return (\r\n            <div>\r\n                <div className = \"header text-center\">\r\n                    <h3>Todo List</h3>\r\n                    <button className = \"btn btn-primary mt-2  addtask\" onClick={()=>this.setModal()} >add task</button>\r\n                </div>\r\n                <div  className = \"task-container\">\r\n                {tasks.map((task ,index)=>{\r\n                    return(\r\n                        <div key={index} className = \"card-wrapper mr-5\">\r\n                            <div className = \"card-top\" style={{\"backgroundColor\": colors[index%5].primaryColor}}></div>\r\n                            <div className = \"task-holder\">\r\n                                    <span className = \"card-header titleheading\" style={{\"backgroundColor\": colors[index%5].secondaryColor, \"borderRadius\": \"10px\"}}>\r\n                                     {task.title}\r\n                                    </span>\r\n                                    <p className = \"descheading mt-1\" >{task.description}</p>\r\n                                    <div style={{\"position\": \"absolute\", \"left\" : \"10px\", \"bottom\" : \"10px\", }} >\r\n                                        { task.completed === false?\r\n                                        <i className=\"fa fa-clock-o\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}}> &nbsp;&nbsp;&nbsp; {task.startdate}</i>\r\n                                        :\r\n                                        <i  className = \"fa fa-check \"  style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} >&nbsp;&nbsp;&nbsp;{task.enddate}</i>\r\n                                        }\r\n                                    </div>\r\n                                    <div style={{\"position\": \"absolute\", \"right\" : \"10px\", \"bottom\" : \"10px\"}}>\r\n                                        <i   onClick={() => this.startEdit(task)} className = \"far fa-edit mr-3\" style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} ></i>\r\n                                        <i onClick={() => this.handleDelete(task)} className=\"fas fa-trash-alt\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}}></i>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                </div>\r\n\r\n                {/* add data */}\r\n                <Modal show={show} >\r\n                <Modal.Header >\r\n                <Modal.Title>Create Task</Modal.Title>\r\n                </Modal.Header >\r\n                <Modal.Body>              \r\n                <div className = \"form-group\">\r\n                    <label>Task Name</label>\r\n                    <input onChange={this.handleChange}   className=\"form-control\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task..\" />\r\n                </div>\r\n                <div className = \"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea  onChange={this.handleChange}   rows = \"4\" className = \"form-control\" value={this.state.activeItem.description} name = \"description\" placeholder=\"Add Description\"></textarea>\r\n                </div>\r\n                <div className = \"form-group\" >\r\n                    <label>Start Date &nbsp;&nbsp;:&nbsp;</label>\r\n                    <input onChange={this.handleChange}  type='date' className = \"form-control\" value={this.state.activeItem.startdate} name=\"startdate\" />\r\n                </div>\r\n                <div className = \"form-group\" >\r\n                    <label>Date of Completion </label>\r\n                    <input onChange={this.handleChange}  type='date'className = \"form-control\" value={this.state.activeItem.enddate} name=\"enddate\" />\r\n                </div>\r\n                <div className = \"form-group\" >\r\n                    <label>Completed &nbsp;&nbsp;&nbsp; </label>\r\n                    <input onChange={this.handleChange}   type='checkbox' checked={this.state.activeItem.completed} name=\"completed\" />\r\n                </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>this.setModal()}>Cancel</Button>\r\n                <Button variant=\"primary\" onClick={()=>this.handleSubmit()}>Add Task</Button>\r\n               </Modal.Footer>             \r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ToDoTasks\r\n","import React, { Component } from 'react'\nimport ToDoTasks from \"./components/ToDoTasks\"\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <ToDoTasks/>\n        \n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />,document.getElementById('root')\n);"],"sourceRoot":""}